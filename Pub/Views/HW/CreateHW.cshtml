
@{
    ViewBag.Title = "CreateHW";
    // Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<script type="text/javascript">
    var sessionStorage_transfer = function (event) {
        if (!event) { event = window.event; } // ie suq
        if (!event.newValue) return;          // do nothing if no value to work with
        if (event.key == 'getSessionStorage') {
            // another tab asked for the sessionStorage -> send it
            localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage));
            // the other tab should now have it, so we're done with it.
            localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.
        } else if (event.key == 'sessionStorage' && !sessionStorage.length) {
            // another tab sent data <- get it
            var data = JSON.parse(event.newValue);
            for (var key in data) {
                sessionStorage.setItem(key, data[key]);
            }
        }
    };
    if (window.addEventListener) {
        window.addEventListener("storage", sessionStorage_transfer, false);
    } else {
        window.attachEvent("onstorage", sessionStorage_transfer);
    };


    // Ask other tabs for session storage (this is ONLY to trigger event)
    if (!sessionStorage.length) {
        localStorage.setItem('getSessionStorage', 'foobar');
        localStorage.removeItem('getSessionStorage', 'foobar');
    };
</script>
<style type="text/css">
    .imgIcon {
        width: 0.5%;
        height: 0.5%;
    }

    .oddTr {
        background-color: #dddddd;
    }

    /*.htmlTempletes tbody tr:nth-child(2n+1) {
        background-color: #e1e4e8;
    }*/
    #example1 td img {
        width: 35px;
        height: 35px;
        border-radius: 100%;
    }


    #example1 {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #example1 td, #customers th {
            border: 1px solid #ddd;
            /*padding: 8px;*/
        }

        #example1 tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #example1 tr:hover {
            background-color: #ddd;
        }

        #example1 th {
            padding-top: 8px;
            padding-bottom: 8px;
            text-align: left;
            background-color: #367fa9;
            color: white;
        }
</style>
<link href="~/css/bootstrap-timepicker.css" rel="stylesheet" />
<link href="~/css/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<script src="~/css/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
<section class="content-header">
    <h1>
        <H1 id="heddertext" class="fa fa-plus-square"></H1>
    </h1>
    @*<ul class="breadcrumb">
        <li><a href="/"><i class="fa fa-home"></i>Home</a></li>
        <li><a href="/academics/default/index">Academics</a></li>
        <li><a href="/academics/assignment/index">Assignment</a></li>
        <li class="active">Create Assignment</li>
    </ul>*@
</section>
<section class="content">

    <div class="box box-solid">

        <form role="form" id="form1" name="form1">
            <input type="hidden" id="hdn">
            <div class="box-body">
                <div class="row">
                   
                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_name required">
                            <label class="control-label" for="assignment-assignment_name">Name <span class="requird">*</span></label>
                            <input type="text" id="assignment_name" class="form-control" name="assignment_name" maxlength="100" aria-required="true">

                            <div class="help-block"></div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_desc required">
                            <label class="control-label" for="assignment-assignment_desc">Description</label>
                            <textarea id="assignment_desc" class="form-control" name="Assignment[assignment_desc]" aria-required="true"></textarea>

                            <div class="help-block"></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_academic_year_id required">
                            <label class="control-label" for="assignment-assignment_academic_year_id">Academic Year <span class="requird">*</span></label>
                            <select id="tc_academic_year" name="tc_academic_year" class="form-control"  valuefield="ID" textfield="StartYear" @*blankRowValue="-1" blankRowText="----Select----"*@ onchange="" aria-required="true"></select>

                            <div class="help-block"></div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_course_id required">
                            <label class="control-label" for="assignment-assignment_course_id">Class <span class="requird">*</span></label>
                            <select class="form-control" id="ddlCourse" name="ddlCourse" valuefield="Id" style="color:black;" textfield="CourseName" blankRowValue="-1" blankRowText="----Select----" aria-required="true"></select>
                            <div class="help-block"></div>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_section_id ">
                            <label class="control-label" for="assignment-assignment_section_id">Section <span class="requird">*</span></label>
                            <select class="form-control" id="ddlSection" valuefield="Id" name="ddlSection" textfield="SectionName" aria-required="true" style="color:black;" blankRowValue="-1" blankRowText="----Select----" ></select>
                            <div class="help-block"></div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_subject_id required">
                            <label class="control-label" for="assignment-assignment_subject_id">Subject <span class="requird">*</span></label>
                            <select id="ddl_subject" class="form-control" name="ddl_subject" aria-required="true" style="color:black;" valuefield="ID" textfield="Subject" blankRowValue="-1" blankRowText="----Select----"></select>
                            <div class="help-block"></div>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_mark">
                            <label class="control-label" for="assignment-assignment_mark">Assignment Mark</label>
                            <input type="text" id="assignment_mark" class="form-control" name="Assignment[assignment_mark]">

                            <div class="help-block"></div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group field-assignment-assignment_submit_date required">
                            <label class="control-label" for="assignment-assignment_submit_date">Submission Date</label>
                            <input type="text" id="assignment_submit_date" class="form-control dtpicker" @*name="Assignment[assignment_submit_date]"*@  name="assignment_submit_date" placeholder="Select Due Date" size="10" readonly>
                            <div class="help-block"></div>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-6">
                        <div class="form-group field-assignment-file required">
                            <label class="control-label" for="assignment-file">Assignment File</label>
                            <input id="hdnFile" type="hidden" name="Assignment[file]" value=""><input type="file" id="inputFile" name="Assignment[file]" aria-required="true">
                            <div class="hint-block">NOTE : Upload only jpg, gif, png, pdf, txt, jpeg, doc, docx files and size must be less than 1MB.</div>
                            <div class="help-block"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="box-footer">
                <button type="button" id="btnCreate" class="btn btn-primary btn-create">Create</button> <button type="button" id="btnEdit" class="btn btn-primary btn-create" style="display:none;">Edit</button>   	<a class="btn btn-default btn-create" href="/EmployeeDashboard/Dashboard">Cancel</a>
            </div>
            <div class="alert alert-success alert-dismissible centerSuccess" id="divsuccesmsg" style="display:none">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4>
                    <i class="icon fa fa-check"></i>
                    success! <span Id="spsuccessMsg"></span>
                </h4>

            </div>
        </form>
    </div>
</section>
<script src="~/js/bootstrap-timepicker.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('.dtpicker').datepicker({
            //dateFormat: 'dd/mm/yy' ,
            autoclose: true,
            format:'dd/mm/yyyy'
        });
       var SchoolID = (sessionStorage.getItem("SchoolID"));
        callServiceMethodForDDl(JSON.stringify([SchoolID]), "/api/TimeTableApi", "GetAcademicYearBySchoolActive", "tc_academic_year", false, "", "", "", "");
     var SchoolID = (sessionStorage.getItem("SchoolID"));   
     callServiceMethodForDDl(JSON.stringify([SchoolID]), "/api/StudentApi", "GetClassesbySchoolID", "ddlCourse", false, "", "", "", "");
         var SchoolID = (sessionStorage.getItem("SchoolID"));   
     callServiceMethodForDDl(JSON.stringify([SchoolID]), "/api/TimeTableApi", "GetSubjectsbySCHOOLid", "ddl_subject", false, "", "", "", "");

       // callServiceMethodForDDl("", "/api/TimeTableApi", "GetAcademicYear", "tc_academic_year", false, "", "", "", "");
       // callServiceMethodForDDl("", "/api/StudentApi", "GetClasses", "ddlCourse", false, "", "", "", "");
       // callServiceMethodForDDl("", "/api/TimeTableApi", "GetSubjects", "ddl_subject", false, "", "", "", "");

        $("#ddlCourse").change(function () {
            var ddlCourse = getControlValue("ddlCourse");
           var SchoolID = (sessionStorage.getItem("SchoolID"));   
            if (ddlCourse != null && (ddlCourse != -1) && (ddlCourse != undefined)) {
                callServiceMethodForDDl(JSON.stringify([ddlCourse,SchoolID]), "/api/StudentApi", "GetSectionsbyschool", "ddlSection", false, "", "", "", "");
            }
        });

        //fillDataTable();



        var ID=getQuerystring("id");
        if (typeof (ID) != "undefined") {
            setControlValue("heddertext", "Edit Assignment");
            setControlValue("hdn", ID);
            GetValues(ID);
        }
        else {
            setControlValue("heddertext", "Create Assignment");
        }
        //
        //callServiceMethodForDDl("", "/api/StudentApi", "GetLeaveStatus", "ddlReqStatus", false, "", "", "", "");
    });
    function openModal()
    {
        $('#myModal').modal('show');
    }

    function GetValues(ID)
    {
        $("#tc_academic_year").attr("disabled", true);
        $("#ddlCourse").attr("disabled", true);
        $("#ddlSection").attr("disabled", true);
        $("#assignment_name").attr("disabled", true);
        $("#ddl_subject").attr("disabled", true);
        //$("#assignment_submit_date").attr("disabled", true);
        $("#btnCreate").hide();
        $("#btnEdit").show();

        $.ajax({
            url: "/api/HWapi/GetAssignment",
            type: "Post",
            data: JSON.stringify([ID]),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if(data.ID!=-1)
                {
                    setControlValue("tc_academic_year", data.hw.AcademicYear);
                    setControlValue("ddlCourse", data.hw.Class);
                    callServiceMethodForDDl(JSON.stringify([data.hw.Class]), "/api/StudentApi", "GetSections", "ddlSection", false, "", "", "", "");
                    setControlValue("assignment_name", data.hw.AssignmentNm);
                    setControlValue("assignment_desc", data.hw.AssignmentDesc);
                    setControlValue("assignment_submit_date", data.subDt);
                    setControlValue("ddl_subject", data.hw.Subject);
                    setControlValue("assignment_mark", $.trim(data.hw.Marks));
                    setTimeout(function () {
                        setControlValue("ddlSection", data.hw.Section);
                    }, 2000);
                    $('#hdnFile').val(data.hw.FilePath);
                }
            }
        });
    }

    function fillDataTable() {
        callJTemplateServiceMethod(JSON.stringify(["default"]), "/api/TimeTableApi", "getTimeTableConfig",
           "tbodyEmployeeDetails", "divEmployeeDetailsJTemplte", true, successMsg, "", "", "");

    }

    function successMsg(p1, p2, p3, datas) {
        //setTimeout(function () {
        //    $('#example1').DataTable();
        //}, 1000);
    }

    //
    $("#btnCreate").click(function () {
        AssignHW(0);
    });

    $("#btnEdit").click(function () {
        var id = getControlValue("hdn");
        AssignHW(id);
    });
 
    $("#inputFile").change(function () {

        var files = !!this.files ? this.files : [];

        var iSize = (files[0].size / 1024);
        iSize = (Math.round(iSize * 100) / 100)

        if (iSize > 1000) {
            alert("File size must be less than 1 Mb");
            $("#inputFile").val("");
            return;
        }
    });

    function AssignHW(id)
    {
        if ($("#form1").valid()) {
            $("#loader").fadeIn();
            debugger;
            var empID = sessionStorage.getItem("EmpId");
            var year = getControlValue("tc_academic_year");
            var course = getControlValue("ddlCourse");
            var section = getControlValue("ddlSection");
            var name = getControlValue("assignment_name");
            var desc = getControlValue("assignment_desc");
            var sub_Dt = getControlValue("assignment_submit_date");
            var sub = getControlValue("ddl_subject");
            var marks = getControlValue("assignment_mark");
            var SchoolID = (sessionStorage.getItem("SchoolID"));

            //callJTemplateServiceMethod(JSON.stringify([year,course,section,name,desc,sub_Dt,sub,marks]), "/api/TimeTableApi", "SearchTimeTableConfig",
            //   "tbodyEmployeeDetails", "divEmployeeDetailsJTemplte", true, successMsg, "", "", "");
            var formData = new FormData();
            var file = $('#inputFile')[0];
            formData.append('file', file.files[0]);
            formData.append('ID', id);
            if (id != 0) {
                if ($('#inputFile').val() == "") {
                    formData.append('path', getControlValue("hdnFile"));
                }
            }
            formData.append('class', course);
            formData.append('section', section);
            formData.append('academicYr', year);
            formData.append('name', name);
            formData.append('desc', desc);
            formData.append('sub_Dt', sub_Dt);
            formData.append('subject', sub);
            formData.append('marks', marks);
            formData.append('empID', empID);
            formData.append('SchoolID', SchoolID);
            $.ajax({
                type: "Post",
                url: "@Url.Content("~/api/HWapi/AssignHW")",
                data: formData,
                enctype: 'multipart/form-data',
                contentType: false,
                processData: false,
                cache: false,
                success: function (data) {
                    $("#loader").fadeOut();
                    if (data.ID != -1) {
                        $("#divsuccesmsg").fadeIn();
                        $("#spsuccessMsg").html("Assignment Saved Successfully");
                       
                        setTimeout(function () {                                                     
                            $("#divsuccesmsg").fadeOut();
                        }, 3000)
                     
                        //alert("Student record finally saved");
                        //DocList(id);
                        //$("#btnSubmit").removeAttr("disabled");
                        location.reload();
                        clearallfields();
                    }
                },
                error: function () {

                }

            });
        }
    }
    function clearallfields()
    {
       
        setControlValue("ddlCourse", -1);
        setControlValue("ddlSection", -1);

        setControlValue("assignment_name", "");
       
        setControlValue("ddl_subject", -1);
        setControlValue("assignment_mark", "");
        setControlValue("assignment_submit_date", "");
       
        $("#assignment_desc").val("");
        $("#inputFile").val("");
        
      //  fillDataTable();

    }
    function ViewDetails(id,name,status,statusNm,course,fromDt,Edt,weekdays,timing)
    {
        setControlValue("spName", name);
        setControlValue("spCourse", course);
        setControlValue("spWeekDays", weekdays);
        setControlValue("spClassTiming", timing);
        setControlValue("spStDt", fromDt);
        setControlValue("spEdDt", Edt);
        if(status==1)
        {
            $("#spActive").show();
            $("#spInactive").hide();
            setControlValue("spActive", statusNm);
        }
        else
        {
            $("#spActive").hide();
            $("#spInactive").show();
            setControlValue("spInactive", statusNm);
        }
        openModal();
    }

    function ResetAll()
    {
        setControlValue("tc_academic_year",-1);
        setControlValue("ddlCourse",-1);
        setControlValue("ddlSection",-1);
        setControlValue("tc_name","");
        setControlValue("tc_classtiming",-1);
        setControlValue("tc_from_date","");
        setControlValue("tc_To_date","");
        setControlValue("ddl_status","-1");

        fillDataTable();
    }

    function EditStatus(id,name,status)
    {
        //alert(id+','+name+','+status);
        var i=status==1?0:1;
        var Items = new Array();
        var Student = {
            ID: id,
            Status: i,
            ViewType:"TimeTableConfig"
        }
        Items.push(Student);

        $.ajax({
            url: "/api/TimeTableApi/SaveTiming",
            type: "Post",
            data: JSON.stringify(Items),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                alert(data.Msg);
                search();
            }
        });
    }

    function Delete(id)
    {
        var result = window.confirm('Are you sure to delete this record?');
        if (result == true) {
            $.ajax({
                url: "/api/TimeTableApi/DeleteRecord",
                type: "Post",
                data: JSON.stringify([id,"TimeTableConfig"]),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    alert(data.Msg);
                    search();
                }
            });
        }
    }

    function GoToCreateTimeTable(x)
    {
        window.location.href = "/TimeTable/CreateTimeTable?id="+x;
    }

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#form1").validate({
            errorClass: "my-error-class",
            validClass: "my-valid-class",
            rules: {

                ddlCourse: {
                    selectcheck: true
                },
                ddlSection: {
                    selectcheck1: true
                },
                ddl_subject: {
                    selectcheck2: true
                },
                tc_academic_year: {
                    selectcheck3: true
                },
                assignment_name: "required",

                assignment_submit_date :"required" 

            },
            messages: {
                ddlSection: "Please Select Section",
                ddl_subject:"Please Select Subject",
                assignment_name: "Please Enter Assignment Name",
                tc_academic_year:"Please Select Academic Year",
                ddlCourse: "Please Select Class Name",
                assignment_submit_date:"Please select Date"
               // txtCoursecoursecode: "Please Enter Class Code"

            }
        })
        jQuery.validator.addMethod('selectcheck', function (value) {
            if (value == "-1") {
                return (value != '-1');
            }
            else if (value == "? undefined:undefined ?")
            {
                return (value != '? undefined:undefined ?');
            }
            else {
                return true;
            }

        }, "Please Select Country");
        jQuery.validator.addMethod('selectcheck1', function (value) {
            if (value == "-1") {
                return (value != '-1');
            }
            else if (value == "? undefined:undefined ?")
            {
                return (value != '? undefined:undefined ?');
            }
          else {
                return true;
            }

        }, "Please Select Country");
        jQuery.validator.addMethod('selectcheck1', function (value) {
            if (value == null) {
                return (value != null);
            }
            else if (value == "? undefined:undefined ?") {
                return (value != '? undefined:undefined ?');
            }
            else {
                return true;
            }

        }, "Please Select Country");

        jQuery.validator.addMethod('selectcheck2', function (value) {
            if (value == "-1") {
                return (value != '-1');
                
            }
            else if (value == "? undefined:undefined ?") {
                return (value != '? undefined:undefined ?');
            }
          else {
                return true;
            }

        }, "Please Select Country");

        jQuery.validator.addMethod('selectcheck3', function (value) {
            if (value == "-1") {
                return (value != '-1');
            }
            else if (value == "? undefined:undefined ?") {
                return (value != '? undefined:undefined ?');
            }
            else {
                return true;
            }

        }, "Please Select Country");


    });
</script>
